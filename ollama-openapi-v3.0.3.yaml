openapi: 3.0.3
info:
  title: Ollama API
  description: API for interacting with Ollama models
  version: 1.0.0
  contact:
    url: https://github.com/ollama/ollama
servers:
  - url: http://localhost:11434
    description: Local Ollama server
paths:
  /api/generate:
    post:
      summary: Generate a completion
      description: Generate a response for a given prompt with a provided model
      operationId: generate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Model not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/chat:
    post:
      summary: Chat with a model
      description: Generate a model response based on a chat history
      operationId: chat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Model not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/embeddings:
    post:
      summary: Generate embeddings
      description: Generate embeddings for a given prompt with a provided model
      operationId: embeddings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbeddingsRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddingsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Model not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/create:
    post:
      summary: Create a model
      description: Create a model from a Modelfile
      operationId: createModel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/pull:
    post:
      summary: Pull a model
      description: Download a model from the Ollama library
      operationId: pullModel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/push:
    post:
      summary: Push a model
      description: Upload a model to a model library
      operationId: pushModel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Model not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/tags:
    get:
      summary: List models
      description: List all models that are available locally
      operationId: listModels
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/copy:
    post:
      summary: Copy a model
      description: Create a copy of a model
      operationId: copyModel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Model not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/delete:
    delete:
      summary: Delete a model
      description: Delete a model and its data
      operationId: deleteModel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Model not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/show:
    post:
      summary: Show model information
      description: Show details about a model
      operationId: showModel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShowRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Model not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/version:
    get:
      summary: Get Ollama version
      description: Retrieve the Ollama version
      operationId: getVersion
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/ps:
    get:
      summary: List running models
      description: List models that are currently loaded into memory
      operationId: listRunningModels
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunningModelsResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    GenerateRequest:
      type: object
      required:
        - model
        - prompt
      properties:
        model:
          type: string
          description: The name of the model to use for generation
        prompt:
          type: string
          description: The prompt to generate a response for
        system:
          type: string
          description: >-
            The system prompt to use (overrides what is defined in the
            Modelfile)
        template:
          type: string
          description: >-
            The prompt template to use (overrides what is defined in the
            Modelfile)
        context:
          type: array
          items:
            type: number
          description: >-
            The context to use for generation (overrides what is defined in the
            Modelfile)
        stream:
          type: boolean
          description: Whether to stream the response
          default: true
        raw:
          type: boolean
          description: Whether to return the raw response from the model
          default: false
        format:
          type: string
          description: The format to return the response in
          enum:
            - json
        options:
          type: object
          description: >-
            Additional model parameters listed in the documentation for the
            Modelfile such as temperature
          additionalProperties: true
    GenerateResponse:
      type: object
      properties:
        model:
          type: string
          description: The name of the model used for generation
        created_at:
          type: string
          format: date-time
          description: The time the response was created
        response:
          type: string
          description: The generated response
        done:
          type: boolean
          description: Whether the response is complete
        context:
          type: array
          items:
            type: number
          description: The context used for generation
        total_duration:
          type: integer
          format: int64
          description: The total time taken to generate the response in nanoseconds
        load_duration:
          type: integer
          format: int64
          description: The time taken to load the model in nanoseconds
        prompt_eval_count:
          type: integer
          description: The number of tokens in the prompt
        prompt_eval_duration:
          type: integer
          format: int64
          description: The time taken to evaluate the prompt in nanoseconds
        eval_count:
          type: integer
          description: The number of tokens in the response
        eval_duration:
          type: integer
          format: int64
          description: The time taken to evaluate the response in nanoseconds
    ChatRequest:
      type: object
      required:
        - model
        - messages
      properties:
        model:
          type: string
          description: The name of the model to use for chat
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: The messages to use for chat
        stream:
          type: boolean
          description: Whether to stream the response
          default: true
        format:
          type: string
          description: The format to return the response in
          enum:
            - json
        options:
          type: object
          description: >-
            Additional model parameters listed in the documentation for the
            Modelfile such as temperature
          additionalProperties: true
    Message:
      type: object
      required:
        - role
        - content
      properties:
        role:
          type: string
          description: The role of the message
          enum:
            - system
            - user
            - assistant
        content:
          type: string
          description: The content of the message
        images:
          type: array
          items:
            type: string
            format: byte
            description: Base64-encoded image data
          description: Optional list of base64-encoded images (for multimodal models)
    ChatResponse:
      type: object
      properties:
        model:
          type: string
          description: The name of the model used for chat
        created_at:
          type: string
          format: date-time
          description: The time the response was created
        message:
          $ref: '#/components/schemas/Message'
          description: The generated message
        done:
          type: boolean
          description: Whether the response is complete
        total_duration:
          type: integer
          format: int64
          description: The total time taken to generate the response in nanoseconds
        load_duration:
          type: integer
          format: int64
          description: The time taken to load the model in nanoseconds
        prompt_eval_count:
          type: integer
          description: The number of tokens in the prompt
        prompt_eval_duration:
          type: integer
          format: int64
          description: The time taken to evaluate the prompt in nanoseconds
        eval_count:
          type: integer
          description: The number of tokens in the response
        eval_duration:
          type: integer
          format: int64
          description: The time taken to evaluate the response in nanoseconds
    EmbeddingsRequest:
      type: object
      required:
        - model
        - prompt
      properties:
        model:
          type: string
          description: The name of the model to use for embeddings
        prompt:
          type: string
          description: The prompt to generate embeddings for
        options:
          type: object
          description: Additional model parameters
          additionalProperties: true
    EmbeddingsResponse:
      type: object
      properties:
        embedding:
          type: array
          items:
            type: number
            format: float
          description: The generated embedding
    CreateRequest:
      type: object
      required:
        - name
        - modelfile
      properties:
        name:
          type: string
          description: The name to give the model
        modelfile:
          type: string
          description: The contents of the Modelfile
        stream:
          type: boolean
          description: Whether to stream the response
          default: false
        path:
          type: string
          description: The path to create the model in
    CreateResponse:
      type: object
      properties:
        status:
          type: string
          description: The status of the model creation
        error:
          type: string
          description: The error message if model creation failed
    PullRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the model to pull
        insecure:
          type: boolean
          description: Whether to allow insecure connections
          default: false
        stream:
          type: boolean
          description: Whether to stream the response
          default: false
    PullResponse:
      type: object
      properties:
        status:
          type: string
          description: The status of the model pull
        digest:
          type: string
          description: The digest of the model
        total:
          type: integer
          format: int64
          description: The total size of the model in bytes
        completed:
          type: integer
          format: int64
          description: The amount of the model that has been downloaded in bytes
    PushRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the model to push
        insecure:
          type: boolean
          description: Whether to allow insecure connections
          default: false
        stream:
          type: boolean
          description: Whether to stream the response
          default: false
    PushResponse:
      type: object
      properties:
        status:
          type: string
          description: The status of the model push
        digest:
          type: string
          description: The digest of the model
        total:
          type: integer
          format: int64
          description: The total size of the model in bytes
        completed:
          type: integer
          format: int64
          description: The amount of the model that has been uploaded in bytes
    ListResponse:
      type: object
      properties:
        models:
          type: array
          items:
            $ref: '#/components/schemas/Model'
          description: The list of models
    Model:
      type: object
      properties:
        name:
          type: string
          description: The name of the model
        modified_at:
          type: string
          format: date-time
          description: The time the model was last modified
        size:
          type: integer
          format: int64
          description: The size of the model in bytes
        digest:
          type: string
          description: The digest of the model
        details:
          $ref: '#/components/schemas/ModelDetails'
          description: Additional details about the model
    ModelDetails:
      type: object
      properties:
        parent_model:
          type: string
          description: The parent model
        format:
          type: string
          description: The format of the model
        family:
          type: string
          description: The family of the model
        families:
          type: array
          items:
            type: string
          description: The families of the model
        parameter_size:
          type: string
          description: The parameter size of the model
        quantization_level:
          type: string
          description: The quantization level of the model
    CopyRequest:
      type: object
      required:
        - source
        - destination
      properties:
        source:
          type: string
          description: The name of the model to copy from
        destination:
          type: string
          description: The name of the model to copy to
    CopyResponse:
      type: object
      properties:
        status:
          type: string
          description: The status of the model copy
    DeleteRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the model to delete
    DeleteResponse:
      type: object
      properties:
        status:
          type: string
          description: The status of the model deletion
    ShowRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the model to show
    ShowResponse:
      type: object
      properties:
        modelfile:
          type: string
          description: The contents of the Modelfile
        parameters:
          type: string
          description: The parameters of the model
        template:
          type: string
          description: The template of the model
        system:
          type: string
          description: The system prompt of the model
        license:
          type: string
          description: The license of the model
    VersionResponse:
      type: object
      properties:
        version:
          type: string
          description: The version of Ollama
    RunningModelsResponse:
      type: object
      properties:
        models:
          type: array
          items:
            $ref: '#/components/schemas/RunningModel'
          description: The list of running models
    RunningModel:
      type: object
      properties:
        name:
          type: string
          description: The name of the model
        model:
          type: string
          description: The model identifier
        size:
          type: integer
          format: int64
          description: The size of the model in bytes
        digest:
          type: string
          description: The digest of the model
        details:
          $ref: '#/components/schemas/ModelDetails'
          description: Additional details about the model
        expires_at:
          type: string
          format: date-time
          description: The time when the model will be unloaded from memory
        size_vram:
          type: integer
          format: int64
          description: The size of the model in VRAM
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: The error message
